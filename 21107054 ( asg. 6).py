# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_R6rJJ1ZtPVURgbria3wLQRZxV3OWsUk
"""

# Question 1 
def perfect(num):
    num_div=[]
    sum=0

    for i in range(1,num+1):
        if num%i==0:
            num_div.append(i)
    print("Divisors of ", num," are ", num_div)

    for elem in num_div:
        sum= sum+elem
    if num==0.5*sum:
        print(num, " is a perfect number.")
    else:
        print(num, " is not a perfect number.")

num= int(input("Enter a number to check whether its perfect: "))
perfect(num)

# Question 2
 user_input = str(input("Enter a word, phrase or sequence: "))
 user_input1 = user_input.replace(" ", "")
 palindrome = user_input1[::-1]
 if user_input1 == palindrome :
   print("Input is a palindrome.")
 else:
  print(user_input," is not a palindrome.")

# Question 3
from math import factorial

n=5
for i in range(n):
    for j in range(n-1-i):
        print(" ", end="")
    for k in range (i+1):
        print(factorial(i) // (factorial(i-k)*factorial(k)) , end=" ") # nCr = n! / ((n-r)! * r!)
    print()

# Question 4
 user_input = str(input("Enter a word or sentence: "))
 user_input1 = user_input.lower()
 alphabets = "qwertyuiopasdfghjklzxcvbnm"
 for char in alphabets :
   if char not in user_input1 :
     print("No, It is NOT a Pangram.")
     break
 else:
     print("Yes, It is a Pangram.")

# Question 5
input_string=str(input("enter a hyphen separated sentence: "))

li=list(input_string.split("-"))
li.sort()

print("-".join(li))

# Question 6
def student_data(student_name , student_branch, student_id):
    print("student name: ",student_name)
    print("student branch: ",student_branch)
    print("student id: ",student_id)

student_data("Aayush","Civil",21102050)

# Question 7
class Student:
    pass 
class Marks:
    pass 
student1 = Student()
marks1 = Marks()
print(isinstance(student1, Student))
print(isinstance(marks1, Student))
print(isinstance(marks1, Marks)) 
print(isinstance(student1, Marks))
print("Check whether the said classes are subclasses of the built-in object class or not.")
print(issubclass(Student, object))
print(issubclass(Marks, object))
print()

# Question 8
def findTriplets(arr, n):

	found = False
	for i in range(0, n-2):
	
		for j in range(i+1, n-1):
		
			for k in range(j+1, n):
			
				if (arr[i] + arr[j] + arr[k] == 0):
					print(arr[i], arr[j], arr[k])
					found = True
	
	if (found == False):
		print(" not exist ")


arr = [0, -1, 2, -3, 1]
n = len(arr)
findTriplets(arr, n)

# Question 9
class parantheses:
    def find(str):
        a= ['()', '{}', '[]'] 
        while any(i in str for i in a):
            for j in a:
                str = str.replace(j, '') 
        return not str 

s = input("Enter the sequence of parantheses : ")
if parantheses.find(s):
    print(s,"-","is balanced")
else:
    print(s,"-","is unbalanced")